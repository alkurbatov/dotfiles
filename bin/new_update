#!/bin/bash

# This file is a part of Dotfiles project
#
# Copyright (C) 2013-2021, Alexander Kurbatov <sir.alkurbatov@yandex.ru>
#
# Dotfiles is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Dotfiles is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Purprose:
# Create new branch and do necessary modifications for new update.

# Input args
VERSION=${1}
if [ -z "${VERSION}" ]; then
    echo "Release number is required!"
    exit 1
fi

# 1. Create new release branch (the current active branch will be used as source) if needed.
BRANCH=${2}
if [ -z "${BRANCH}" ]; then
    echo "Name for release branch is not specified, skipping new branch creation!"
else
    git checkout -b "${BRANCH}" || { echo "Failed to create new branch!"; exit 2; }
fi

# 2. Adjust the build branches.
TARGETS=targets.list
if [[ -f "${TARGETS}" ]]; then
    /usr/bin/sed -E -i "" "s/(^[a-z -\d]+-)([0-9.]+)(-[a-z]+)/\1${VERSION}\3/g" ${TARGETS}
    git add "${TARGETS}" || { echo "Failed to add changes from ${TARGETS}!"; exit 2; }
fi

# 3. Increment npm minor version.
PACKAGEJSON=package.json
if [[ -f "${PACKAGEJSON}" ]]; then
    /opt/local/bin/perl -i -pe 's/(^  \"version\": \")(\d+).(\d+).(\d+)(\",)/$1.$2.".".($3+1).".0".$5/e' ${PACKAGEJSON}
    git add "${PACKAGEJSON}" || { echo "Failed to add changes from ${PACKAGEJSON}!"; exit 2; }
fi

PACKAGELOCKJSON=package-lock.json
if [[ -f "${PACKAGELOCKJSON}" ]]; then
    /opt/local/bin/perl -i -pe 's/(^  \"version\": \")(\d+).(\d+).(\d+)(\",)/$1.$2.".".($3+1).".0".$5/e' ${PACKAGELOCKJSON}
    git add "${PACKAGELOCKJSON}" || { echo "Failed to add changes from ${PACKAGELOCKJSON}!"; exit 2; }
fi

# 4. Increment makefile version.
MAKEFILEVERSION=Makefile.version
if [[ -f "${MAKEFILEVERSION}" ]]; then
    /opt/local/bin/perl -i -pe 's/(\d+).(\d+).(\d+)/$1.".".($2+1).".0"/e' ${MAKEFILEVERSION}
    git add "${MAKEFILEVERSION}" || { echo "Failed to add changes from ${MAKEFILEVERSION}!"; exit 2; }
fi

# 5. Increase version in client/version.js.
CLIENTVERSION=client/version.js
if [[ -f "${CLIENTVERSION}" ]]; then
    /opt/local/bin/perl -i -pe 's/(version=\")(\d+).(\d+).(\d+)\"/$1.$2.".".($3+1).".0\""/e' ${CLIENTVERSION}
    git add "${CLIENTVERSION}" || { echo "Failed to add changes from ${CLIENTVERSION}!"; exit 2; }
fi

# 6. Commit the changes.
git commit -m "chore: Switch to ${VERSION}" || { echo "Failed to commit the changes!"; exit 2; }

