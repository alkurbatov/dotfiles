#!/usr/bin/env bash

# This file is a part of Dotfiles project
#
# Copyright (C) 2013-2023, Alexander Kurbatov <sir.alkurbatov@yandex.ru>
#
# Dotfiles is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Dotfiles is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Purpose:
# Prepare fresh system for work.

set -euxo pipefail

install_or_update_zsh_plugin() {
    if [ -d ~/.zsh/"${2}" ]; then
        cd ~/.zsh/"${2}"
        git pull
        cd -
        return
    fi

    git clone "${1}" "${HOME}/.zsh/${2}"
}

# Install Homebrew, see
# https://docs.brew.sh/Installation
bash <(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)

# Install brew-gem to support Ruby gems installation as Homebrew formulas.
brew install brew-gem

# Fonts
brew install homebrew/cask/font-jetbrains-mono

# Emacs
brew tap d12frosted/emacs-plus
brew install emacs-plus@30 \
     --with-imagemagick \
     --with-savchenkovaleriy-big-sur-icon \
     --with-xwidgets \
     --with-poll
brew install coreutils
brew install libterm       # for the vterm package
brew install pandoc        # for markdown preview in Emacs
brew install pygments      # for better markdown syntax highlighting in Emacs
brew install --cask mactex # for LaTex support in org-mode
brew install inkscape

# Spellchecking
brew install hunspell # for multilanguage spellchecking
wget -O ~/Library/Spelling/en_US.aff  https://cgit.freedesktop.org/libreoffice/dictionaries/plain/en/en_US.aff
wget -O ~/Library/Spelling/en_US.dic https://cgit.freedesktop.org/libreoffice/dictionaries/plain/en/en_US.dic
wget -O ~/Library/Spelling/ru_RU.aff  https://cgit.freedesktop.org/libreoffice/dictionaries/plain/ru_RU/ru_RU.aff
wget -O ~/Library/Spelling/ru_RU.dic https://cgit.freedesktop.org/libreoffice/dictionaries/plain/ru_RU/ru_RU.dic
brew install vale # to check writing style

# C++
brew install cmake
brew install doxygen
brew install llvm
ln -s "$(brew --prefix llvm)/bin/clang-format" "$(brew --prefix)/bin/clang-format"
ln -s "$(brew --prefix llvm)/bin/clang-tidy" "$(brew --prefix)/bin/clang-tidy"
ln -s "$(brew --prefix llvm)/bin/clang-apply-replacements" "$(brew --prefix)/bin/clang-apply-replacements"

# Python
brew install python@3.13
ln -s "$(brew --prefix)/bin/python3.13" "$(brew --prefix)/bin/python"
brew install virtualenv
brew install pipx                           # for isolated installation of Python tools e.g. poetry
pipx install poetry
brew install pyright                        # for LSP in Emacs

# Go
brew install go
brew install gopls
ln -s "$(brew --prefix)/bin/gopls" ~/work/bin
brew install delve                                 # to debug Golang apps
brew install gofumpt                               # for improved code formatting
brew install golangci-lint
go install github.com/daixiang0/gci@latest          # for improved imports formatting
go install github.com/rogpeppe/godef@latest
go install github.com/swaggo/swag/cmd/swag@latest   # to generate OpenAPI schema from comments in code
go install golang.org/x/perf/cmd/benchstat@latest   # to carefully analyze bechmarks results between runs
go install golang.org/x/tools/cmd/deadcode@latest   # to search dead code
go install golang.org/x/tools/cmd/godoc@latest
go install golang.org/x/vuln/cmd/govulncheck@latest
go install golang.org/x/perf/cmd/benchstat@latest   # for better comparison of Golang benchmarks results
brew install protobuf                               # for protoc gRPC compiler
brew install graphviz                               # to view graphics from pprof

# JavaScript
brew install node@22
brew link node@22

# Markdown
brew-gem install mdl      # to lint markdown files

# Docker
brew install hadolint

# Scripting
brew install shellcheck

# Administration
brew install btop
brew install coreutils
brew install inetutils

# Utilities
brew install ag
brew install difftastic       # for better diff in git
brew install fd
brew install git-cliff        # for changelog generation
brew install git-lfs          # to work with 'large file storage'
brew install gnu-tar
brew install gpg
brew install grpcurl          # to work with gRPC services
brew install --cask hex-fiend # HEX editor
brew install pinentry-mac
brew install pre-commit
brew install pyyaml           # for pre-commit
brew install rar
brew install raycast
brew install ripgrep          # for search with consult in Emacs
brew install tmux
brew install unzip
brew install wget

# Graphics
brew install --cask drawio

# Tell pinentry to ask gpg keys password using terminal, not gui
mkdir ~/.gnupg
echo "pinentry-program $(brew --prefix)/bin/pinentry-mac" > ~/.gnupg/gpg-agent.conf

# Restart gpg-agent to apply changes
gpgconf --kill gpg-agent

# Setup the default layout.
mkdir -p ~/work/{bin,etc,pkg,rfc,tmp}
mkdir -p ~/work/src/github.com/alkurbatov
mkdir -p ~/work/src/gitverse.ru/alkurbatov

# Precreate SSH folders.
mkdir -p  ~/.ssh/controlmasters

# Copy settings from my dotfiles.
cp ~/work/src/github.com/alkurbatov/dotfiles/.zsh* ~/
cp -r ~/work/src/github.com/alkurbatov/dotfiles/.config ~/
cp ~/work/src/github.com/alkurbatov/dotfiles/.tmux.conf ~/
cp ~/work/src/github.com/alkurbatov/dotfiles/git/.gitconfig ~/
cp ~/work/src/github.com/alkurbatov/dotfiles/git/.hadolint.yaml ~/

# Install or update ZSH plugins.
install_or_update_zsh_plugin git@github.com:MichaelAquilina/zsh-you-should-use.git zsh-you-should-use
install_or_update_zsh_plugin git@github.com:zsh-users/zsh-syntax-highlighting.git zsh-syntax-highlighting
install_or_update_zsh_plugin git@github.com:zsh-users/zsh-autosuggestions.git zsh-autosuggestions

# Tweak Finder
defaults write NSGlobalDomain AppleShowAllExtensions -bool true
defaults write com.apple.Finder AppleShowAllFiles -bool true
defaults write com.apple.Finder NewWindowTarget -string "PfHm"
defaults write com.apple.Finder NewWindowTargetPath -string "file:///Users/alkurbatov/"
defaults write com.apple.Finder ShowStatusBar -bool false
defaults write com.apple.Finder _FXShowPosixPathInTitle -bool true
defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
defaults write com.apple.finder ShowPathbar -bool true
defaults write com.apple.finder _FXSortFoldersFirst -bool true
killall Finder

# Make it possible to repeat the same keypress many times by holding it down.
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
