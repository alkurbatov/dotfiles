#!/usr/bin/env bash

# This file is a part of Dotfiles project
#
# Copyright (C) 2013-2023, Alexander Kurbatov <sir.alkurbatov@yandex.ru>
#
# Dotfiles is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Dotfiles is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

# Purprose:
# Prepare fresh system for work.

set -euxo pipefail

install_or_update_zsh_plugin() {
    if [ -d ~/.zsh/"${2}" ]; then
        cd ~/.zsh/"${2}"
        git pull
        cd -
        return
    fi

    git clone "${1}" "${HOME}/.zsh/${2}"
}

# Install Homebrew, see
# https://docs.brew.sh/Installation
bash <(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)

# Fonts
brew install font-fira-code
brew install font-roboto
brew install font-roboto-mono
brew install font-roboto-mono-nerd-font
brew install font-roboto-slab
brew install font-victor-mono
brew install homebrew/cask-fonts/font-jetbrains-mono

# Emacs
brew tap d12frosted/emacs-plus
brew install emacs-plus@29 --with-imagemagick --with-no-frame-refocus --with-savchenkovaleriy-big-sur-icon --with-xwidgets
ln -s /opt/homebrew/opt/emacs-plus@29/Emacs.app /Applications
brew install coreutils
brew install exa
brew install mu msmtp # for reading and sending email in Emacs
brew install --HEAD isync # at least 1.5.0 is needed to support unicode mail folders
brew install multimarkdown

# Spellchecking
brew install hunspell # for multilanguage spellchecking
wget -O ~/Library/Spelling/en_US.aff  https://cgit.freedesktop.org/libreoffice/dictionaries/plain/en/en_US.aff
wget -O ~/Library/Spelling/en_US.dic https://cgit.freedesktop.org/libreoffice/dictionaries/plain/en/en_US.dic
wget -O ~/Library/Spelling/ru_RU.aff  https://cgit.freedesktop.org/libreoffice/dictionaries/plain/ru_RU/ru_RU.aff
wget -O ~/Library/Spelling/ru_RU.dic https://cgit.freedesktop.org/libreoffice/dictionaries/plain/ru_RU/ru_RU.dic

# C++
brew install cmake
brew install doxygen

# Python
brew install python@3.11
ln -s /opt/homebrew/bin/python3.11 /opt/homebrew/bin/python
brew install virtualenv
brew install bpython
curl -sSL https://install.python-poetry.org | POETRY_HOME=~/work POETRY_VERSION=1.2.2 python3.11 -
brew install pyright # for LSP in Emacs

# Go
brew install go
brew install gopls
ln -s /opt/homebrew/bin/gopls ~/work/bin
brew install gofumpt                               # for improved code formatting
brew install golangci-lint
go install github.com/rogpeppe/godef@latest
go install golang.org/x/tools/cmd/godoc@latest
go install github.com/nsf/gocode@latest            # for go-eldoc mode
go install golang.org/x/perf/cmd/benchstat@latest  # to carefully analyze bechmarks results between runs
go install github.com/swaggo/swag/cmd/swag@latest  # to generate OpenAPI schema from comments in code
brew install protobuf                              # for protoc gRPC compiler
brew install graphviz                              # to view graphics from pprof

# JavaScript
brew install node@18
brew link node@18

# Docker
brew install hadolint

# Scripting
brew install shellcheck

# Administration
brew install btop
brew install coreutils
brew install inetutils

# Remote access
brew install --cask xquartz
brew install xauth

# Utilities
brew install ag
brew install fd
brew install git-lfs # to work with 'large file storage'
brew install gnu-tar
brew install gpg
brew install pinentry-mac
brew install pre-commit
brew install rar
brew install rectangle
brew install tmux
brew install unzip
brew install wget

# Graphics
brew install --cask drawio
brew install --cask pinta

# Tell pinentry to ask gpg keys password using terminal, not gui
mkdir ~/.gnupg
echo "pinentry-program /opt/homebrew/bin/pinentry-mac" > ~/.gnupg/gpg-agent.conf

# Setup the default layout.
mkdir -p ~/work/{bin,etc,pkg,src/sandbox,tmp}
mkdir -p ~/work/src/github.com/alkurbatov
mkdir -p ~/work/src/git.mts.ai/alkurbatov

# Precreate SSH folders.
mkdir -p  ~/.ssh/controlmasters

# Copy settings from my dotfiles.
cp ~/work/src/github.com/alkurbatov/dotfiles/.zsh* ~/
cp -r ~/work/src/github.com/alkurbatov/dotfiles/.config ~/
cp ~/work/src/github.com/alkurbatov/dotfiles/.tmux.conf ~/
cp ~/work/src/github.com/alkurbatov/dotfiles/git/.gitconfig ~/
cp ~/work/src/github.com/alkurbatov/dotfiles/git/.hadolint.yaml ~/

# Install or update ZSH plugins.
install_or_update_zsh_plugin git@github.com:MichaelAquilina/zsh-you-should-use.git zsh-you-should-use
install_or_update_zsh_plugin git@github.com:zsh-users/zsh-syntax-highlighting.git zsh-syntax-highlighting
install_or_update_zsh_plugin git@github.com:zsh-users/zsh-autosuggestions.git zsh-autosuggestions

# Tweak Finder
defaults write com.apple.Finder AppleShowAllFiles -bool true
defaults write com.apple.Finder _FXShowPosixPathInTitle -bool true
defaults write com.apple.Finder ShowStatusBar -bool true
defaults write com.apple.Finder NewWindowTarget -string "PfHm"
defaults write com.apple.Finder NewWindowTargetPath -string "file:///Users/alkurbatov/"
killall Finder

# Make it possible to repeat the same keypress many times by holding it down.
defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false
